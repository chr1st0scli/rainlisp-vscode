{
  "Variable Definition": {
    "prefix": "define",
    "body": "(define ${1:id} ${2:expression})",
    "description": "Defines a variable."
  },
  "Procedure Definition": {
    "prefix": "define",
    "body": [
      "(define (${1:id} ${2:optional_parameters})",
      "\t${3:body})",
      "$0"
    ],
    "description": "Defines a procedure."
  },
  "Quote Expression": {
    "prefix": "quote",
    "body": "(quote ${1:quotable})",
    "description": "Creates a quote symbol."
  },
  "Quote Shorthand Expression": {
    "prefix": "quote",
    "body": "'${1:quotable}",
    "description": "Creates a quote symbol."
  },
  "Quotes List Expression": {
    "prefix": "quote",
    "body": "(quote (${1:optional_quotables}))",
    "description": "Creates a list of quote symbols."
  },
  "Quotes List Shorthand Expression": {
    "prefix": "quote",
    "body": "'(${1:optional_quotables})",
    "description": "Creates a list of quote symbols."
  },
  "Assignment": {
    "prefix": "set!",
    "body": "(set! ${1:id} ${2:expression})",
    "description": "Assigns a value to a variable."
  },
  "If Expression": {
    "prefix": "if",
    "body": [
      "(if ${1:predicate}",
      "    ${2:consequent}",
      "    ${3:optional_alternative})"
    ],
    "description": "Creates an if expression."
  },
  "Cond Expression": {
    "prefix": "cond",
    "body": [
      "(cond (${1:predicate} ${2:consequents})",
      "      (${3:predicate} ${4:consequents})",
      "      (else ${5:optional_alternatives}))"
    ],
    "description": "Creates a cond expression."
  },
  "Begin Expression": {
    "prefix": "begin",
    "body": [
      "(begin",
      "\t${1:expression}",
      "\t${2:optional_expressions})"
    ],
    "description": "Creates a begin expression block."
  },
  "Lambda Expression": {
    "prefix": "lambda",
    "body": [
      "(lambda (${1:optional_parameters})",
      "\t${2:body})"
    ],
    "description": "Creates a lambda."
  },
  "Let Expression": {
    "prefix": "let",
    "body": [
      "(let ((${1:id} ${2:expression})",
      "      (${3:id} ${4:expression}))",
      "     ${5:body})"
    ],
    "description": "Creates a scope."
  },
  "And Expression": {
    "prefix": "and",
    "body": "(and ${1:expression} ${2:optional_expressions})",
    "description": "Creates an and expression."
  },
  "Or Expression": {
    "prefix": "or",
    "body": "(or ${1:expression} ${2:optional_expressions})",
    "description": "Creates an or expression."
  }
}