{
  "Begin": {
    "prefix": "begin",
    "body": [
      "(begin",
      "\t${1:expression}",
      "\t${2:. expressions})"
    ],
    "description": "Begin expression block."
  },
  "Cond": {
    "prefix": "cond",
    "body": [
      "(cond (${1:predicate} ${2:expression . expressions})",
      "      (${3:predicate} ${4:expression . expressions}))"
    ],
    "description": "Cond expression."
  },
  "Cond with else": {
    "prefix": "cond",
    "body": [
      "(cond (${1:predicate} ${2:expression . expressions})",
      "      (${3:predicate} ${4:expression . expressions})",
      "      (else ${5:expression . expressions}))"
    ],
    "description": "Cond with else expression."
  },
  "Variable definition": {
    "prefix": "define",
    "body": "(define ${1:id} ${2:expression})",
    "description": "Variable definition."
  },
  "Procedure definition with no parameters": {
    "prefix": "define",
    "body": [
      "(define (${1:id})",
      "\t${2:body})",
      "$0"
    ],
    "description": "Procedure definition with no parameters."
  },
  "Procedure definition": {
    "prefix": "define",
    "body": [
      "(define (${1:id} ${2:. parameters})",
      "\t${3:body})",
      "$0"
    ],
    "description": "Procedure definition."
  },
  "If": {
    "prefix": "if",
    "body": [
      "(if ${1:predicate} ${2:consequent})"
    ],
    "description": "If expression."
  },
  "If with else": {
    "prefix": "if",
    "body": [
      "(if ${1:predicate}",
      "    ${2:consequent}",
      "    ${3:alternative})"
    ],
    "description": "If with else expression."
  },
  "Lambda with no parameters": {
    "prefix": "lambda",
    "body": [
      "(lambda ()",
      "\t${1:body})"
    ],
    "description": "Lambda with no parameters."
  },
  "Lambda": {
    "prefix": "lambda",
    "body": [
      "(lambda (${1:. parameters})",
      "\t${2:body})"
    ],
    "description": "Lambda."
  },
  "Let": {
    "prefix": "let",
    "body": [
      "(let ((${1:id} ${2:expression})",
      "      (${3:id} ${4:expression}))",
      "     ${5:body})"
    ],
    "description": "Let scope."
  }
}